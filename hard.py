# Задание - 1
# Давайте опишем пару сущностей player и enemy через словарь,
# который будет иметь ключи и значения:
# name - строка полученная от пользователя,
# health - 100,
# damage - 50.
# Поэксперементируйте с значениями урона и жизней по желанию.
# Теперь надо создать функцию attack(person1, person2), аргументы можете указать свои,
# функция в качестве аргумента будет принимать атакующего и атакуемого,
# функция должна получить параметр damage атакующего и отнять это количество
# health от атакуемого. Функция должна сама работать с словарями и изменять их значения.


# Задание - 2
# Давайте усложним предыдущее задание, измените сущности, добавив новый параметр - armor = 1.2
# Теперь надо добавить функцию, которая будет вычислять и возвращать полученный урон по формуле damage / armor
# Следовательно у вас должно быть 2 функции, одна наносит урон, вторая вычисляет урон по отношению к броне.

# Сохраните эти сущности, полностью, каждую в свой файл,
# в качестве названия для файла использовать name, расширение .txt
# Напишите функцию, которая будет считывать файл игрока и его врага, получать оттуда данные, и записывать их в словари,
# после чего происходит запуск игровой сессии, где сущностям поочередно наносится урон,
# пока у одного из них health не станет меньше или равен 0.
# После чего на экран должно быть выведено имя победителя, и количество оставшихся единиц здоровья.

name_player1 = input("Введите имя первого игрока: ")
name_player2 = input("Введите имя второго игрока: ")

player1 = {
    'name': name_player1,
    'health': 100,
    'damage': 45,
    'armor': 1.5
}

player2 = {
    'name': name_player2,
    'health': 100,
    'damage': 25,
    'armor': 2
}

def defense (damage, armor):
    return damage / armor

def attack (unit, target):
    damage = defense(unit['damage'], target['armor'])
    target ['health'] = target ['health'] - damage

def defense (damage, armor):
    return damage / armor

attack(player1, player2)
print(player2)

attack(player2,player1)
print(player1)